
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.Document;
/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */

/*
 * OntoGenForm.java
 *
 * Created on 20.11.2010, 08:48:06
 */
/**
 *
 * @author sebmate
 */
public class OntoGenForm extends javax.swing.JFrame {

    /**
     * Creates new form OntoGenForm
     */
    public OntoGenForm() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            initComponents();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OntoGenForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(OntoGenForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(OntoGenForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(OntoGenForm.class.getName()).log(Level.SEVERE, null, ex);
        }


        BufferedInputStream stream = null;
        Properties properties = new Properties();
        try {
            stream = new BufferedInputStream(new FileInputStream("QuickMapp.properties"));
            properties.load(stream);
            stream.close();

            leftNamespace.setText(properties.getProperty("leftNameSpace"));
            mappingNamespace.setText(properties.getProperty("mappingNameSpace"));
            rightNamespace.setText(properties.getProperty("rightNameSpace"));

            String projSplit[] = properties.getProperty("mappingNameSpace").split("/");
            projectName.setText(projSplit[projSplit.length-2]);
      
        } catch (IOException ex) {
            Logger.getLogger(OntoGenForm.class.getName()).log(Level.SEVERE, null, ex);
        }


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        dateFormat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        projectName = new javax.swing.JTextField();
        jdbc = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rightNamespace = new javax.swing.JTextField();
        leftNamespace = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        mappingNamespace = new javax.swing.JTextField();
        createProperties = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logConsole = new javax.swing.JTextArea();
        newOntologies = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OntoGen");
        setLocationByPlatform(true);

        jButton1.setText("Run");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dateFormat.setText("DD.MM.YY");

        jLabel1.setText("Date format:");

        jLabel2.setText("Project name:");

        projectName.setText("MyProject");
        projectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectNameActionPerformed(evt);
            }
        });
        projectName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                projectNameKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                projectNameKeyReleased(evt);
            }
        });

        jdbc.setText("JDBC database access");

        jLabel3.setText("Target namespace:");

        jLabel4.setText("Source namespace:");

        rightNamespace.setText("http://www.example.org/MyProject/SourceOntology#");

        leftNamespace.setText("http://www.example.org/MyProject/TargetOntology#");
        leftNamespace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftNamespaceActionPerformed(evt);
            }
        });

        jLabel5.setText("Mapping namespace:");

        mappingNamespace.setText("http://www.example.org/MyProject/MappingOntology#");

        createProperties.setText("Create new .properties-files for OntoEdit, QuickMapp and OntoExport (!)");

        jLabel6.setText("Please note: this processes the file \"Input.csv\" in the program directory.");

        logConsole.setColumns(20);
        logConsole.setLineWrap(true);
        logConsole.setRows(5);
        jScrollPane1.setViewportView(logConsole);

        newOntologies.setText("Besides a new source ontology, also create a new mapping and target ontology");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jdbc)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel2)
                                    .add(jLabel1))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(dateFormat)
                                    .add(projectName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jLabel3)
                            .add(jLabel5))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(mappingNamespace, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                            .add(rightNamespace, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                            .add(leftNamespace, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(createProperties)
                            .add(newOntologies)
                            .add(layout.createSequentialGroup()
                                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel6)))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(projectName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(leftNamespace, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(dateFormat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4)
                    .add(rightNamespace, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jdbc)
                    .add(jLabel5)
                    .add(mappingNamespace, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(newOntologies)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(createProperties)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jLabel6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //outputConsole.setText("");
        logConsole.setText("");

        Exporter exporter = new Exporter(this);
        Thread exporterThread;

        ExporterConfig myConfig = new ExporterConfig();

        myConfig.setLeftNamespace(leftNamespace.getText());
        myConfig.setLogConsole(logConsole.getText());
        myConfig.setMappingNamespace(mappingNamespace.getText());
        myConfig.setProjectName(projectName.getText());
        myConfig.setRightNamespace(rightNamespace.getText());
        myConfig.setDateFormat(dateFormat.getText());
        myConfig.setCreateProperties(createProperties.isSelected());
        myConfig.setJDBC(jdbc.isSelected());
        myConfig.setNewOntologies(newOntologies.isSelected());

        exporter.setConfig(myConfig);
        exporterThread = new Thread(exporter);
        exporterThread.start();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void leftNamespaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftNamespaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftNamespaceActionPerformed

    private void projectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectNameActionPerformed

    private void projectNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_projectNameKeyTyped
    }//GEN-LAST:event_projectNameKeyTyped

    private void projectNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_projectNameKeyReleased

        String ProjURL = projectName.getText();
        ProjURL = ProjURL.replace(" ", "-");

        leftNamespace.setText("http://www.example.org/" + ProjURL + "/TargetOntology#");
        rightNamespace.setText("http://www.example.org/" + ProjURL + "/SourceOntology#");
        mappingNamespace.setText("http://www.example.org/" + ProjURL + "/MappingOntology#");
        // TODO add your handling code here:
    }//GEN-LAST:event_projectNameKeyReleased

    void consoleWrite(String consoleMessage) {
        //System.out.println("consoleWrite: " + consoleMessage);
        // Document doc = outputConsole.getDocument();
        //  try {
        //doc.insertString(doc.getLength(), consoleMessage + "", null);
        //outputConsole.setCaretPosition(outputConsole.getText().length());
        // System.out.println(consoleMessage);
        // } catch (Exception ex) {
        //System.out.println(ex);
        //  }
    }

    void logWrite(String consoleMessage) {
        //System.out.println("logWrite: " + consoleMessage);
        Document doc = logConsole.getDocument();

        try {
            doc.insertString(doc.getLength(), consoleMessage + "", null);
            logConsole.setCaretPosition(logConsole.getText().length());
        } catch (Exception ex) {
            //System.out.println(ex);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox createProperties;
    private javax.swing.JTextField dateFormat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jdbc;
    private javax.swing.JTextField leftNamespace;
    private javax.swing.JTextArea logConsole;
    private javax.swing.JTextField mappingNamespace;
    private javax.swing.JCheckBox newOntologies;
    private javax.swing.JTextField projectName;
    private javax.swing.JTextField rightNamespace;
    // End of variables declaration//GEN-END:variables

    private String getOWLClassName(String string) {

        //System.out.println(string);

        // TODO: replace with regex-thing

        /*
         * String className = string.replace(" ", "_"); className =
         * className.replace(".", "_"); className = className.replace(":", "_");
         * className = className.replace("{", "_");
         */

        String className = string.replaceAll("[^\\p{L}\\p{N}]", "_");

        // System.out.println(className);

        return className;
    }

    public void run() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
